{"meta":{"title":"Hexo","subtitle":"","description":"","author":"FengDonghai","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"如何搭建比较“好”的框架","slug":"如何搭建比较“好”的框架","date":"2020-04-27T09:05:49.812Z","updated":"2020-04-27T01:05:04.000Z","comments":true,"path":"2020/04/27/如何搭建比较“好”的框架/","link":"","permalink":"http://yoursite.com/2020/04/27/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%AF%94%E8%BE%83%E2%80%9C%E5%A5%BD%E2%80%9D%E7%9A%84%E6%A1%86%E6%9E%B6/","excerpt":"","text":"如何搭建比较“好”的系统框架先贴上代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566#include &lt;iostream&gt;using namespace std;class A&#123; public: A()&#123;&#125;; virtual ~A()&#123;&#125;; virtual void display()=0; virtual void run()=0;&#125;;class C: public A&#123; public: void display();// 实现类 void run();&#125;;void C::display()// 实现代码 &#123; cout&lt;&lt;\"cc_display\"&lt;&lt;endl;&#125;void C::run() //具体实现 &#123; cout&lt;&lt;\"cc_run\"&lt;&lt;endl;&#125;class B: public A&#123; public: B(); virtual ~B(); A* a; void display(); void run();&#125;;//----------------------------------------//比较统一， 专门用于导出 void B::display() //接口类&#123; a-&gt;display();&#125;void B::run() //接口类&#123; a-&gt;run();&#125;//-----------------------------------------B::B() //构造函数 &#123; a=NULL; a=new C;&#125;B::~B() //析构函数 &#123; delete a; a=NULL;&#125;int main()&#123; A* a; a=new B; a-&gt;display(); a-&gt;run();&#125; 分析： 什么是一个较好的系统？最基本的要求，框架比较稳定，后续的添加需求不能影响到原来的系统框架，以最小的成本实现。当然，具体的可参见，这里仅简要说说。","categories":[],"tags":[]},{"title":"为什么要引入虚函数？","slug":"为什么要引入虚函数？","date":"2020-04-27T05:01:21.925Z","updated":"2020-04-28T01:19:17.760Z","comments":true,"path":"2020/04/27/为什么要引入虚函数？/","link":"","permalink":"http://yoursite.com/2020/04/27/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%95%E5%85%A5%E8%99%9A%E5%87%BD%E6%95%B0%EF%BC%9F/","excerpt":"为什么要引入虚函数？ 虚函数 本文主要介绍虚函数，首先，我们需要了解什么是虚函数，为什么需要虚函数？如何在我们的项目中使用虚函数。","text":"为什么要引入虚函数？ 虚函数 本文主要介绍虚函数，首先，我们需要了解什么是虚函数，为什么需要虚函数？如何在我们的项目中使用虚函数。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include &lt;iostream&gt;using namespace std;class A&#123; public: virtual void display();&#125;;void A::display()&#123; cout&lt;&lt;\"a\"&lt;&lt;endl;&#125;class B: public A&#123; public: void display();&#125;;void B::display()&#123; cout&lt;&lt;\"b\"&lt;&lt;endl;&#125;class C:public A&#123; void display();&#125;;void C::display()&#123; cout&lt;&lt;\"c\"&lt;&lt;endl;&#125;int main()&#123; A *p; p=new A; //调用成员函数时指针属于谁就调用谁 p-&gt;display();//a p=new B; p-&gt;display();//b p=new C; p-&gt;display(); // c return 0;&#125; 复制这段代码，到http://coliru.stacked-crooked.com/运行一次，看看效果，自己再动手写一遍。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-04-27T01:28:45.698Z","updated":"2020-04-27T01:28:45.698Z","comments":true,"path":"2020/04/27/hello-world/","link":"","permalink":"http://yoursite.com/2020/04/27/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}